/*
 * generated by Xtext 2.11.0
 */
package edu.eci.prot.dsl2.validation

import edu.eci.prot.dsl2.dsl2.Dsl2Package
import edu.eci.prot.dsl2.dsl2.Entity
import edu.eci.prot.dsl2.dsl2.Feature
import edu.eci.prot.dsl2.dsl2.PackageDeclaration
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class Dsl2Validator extends AbstractDsl2Validator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					Dsl2Package.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	
	@Check
	def void checkOnlyOnePrincipal(Entity en) {
		var counter=0;
		for (e : en.eResource.allContents.toIterable.filter(Entity)){
			if(e.principal){
				counter++;
			}
		}
		if(counter>1){
			error('Just one principal Entity must be present', Dsl2Package.Literals.ENTITY__PRINCIPAL)
		}else if(counter<1){
			error('At least one principal Entity must be present', Dsl2Package.Literals.ENTITY__PRINCIPAL)
		}
	}
	
	
	@Check
	def void checkRightPackageName(PackageDeclaration p){
		if(!(p.name).endsWith(".model")){
			error('Package name must end with ".model".', Dsl2Package.Literals.PACKAGE_DECLARATION__ELEMENTS)
		}
	}
	
	@Check
	def void checkManyCannotBeTransient(Feature f){
		if(f.many&&f.transient){
			error('Feature with "many" property cannot have "transient" property', Dsl2Package.Literals.ENTITY__FEATURES)
		}
	}
	
	@Check
	def void checkValidDataType(Entity e){
		for (Feature f : e.features) {
			var d=f.type;
			println(d.name)
			if(!(d.name.equals("Byte")||d.name.equals("Short")||d.name.equals("Integer")||d.name.equals("Long")||d.name.equals("Float")||d.name.equals("Double")||d.name.equals("Char")||d.name.equals("String")||d.name.equals("Boolean")||d.name.equals("Date"))){
				error('datatype must be a primitive type like: Byte or Short or Integer or Long or Float or Double or Character or String or Boolean or Date', Dsl2Package.Literals.ENTITY__FEATURES);
			}
		}
		
	}
	
	@Check
	def void checkNameAndIdForPrincipalEntity(Entity e){
		var flag=false;
		if(e.principal){
			for (var i=0;i<e.features.size && !flag; i++) {
				//println(e.features.get(i).name)
			}
		}
	}
}
