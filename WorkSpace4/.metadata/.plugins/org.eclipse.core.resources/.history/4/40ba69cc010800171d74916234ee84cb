/*
 * generated by Xtext 2.11.0
 */
package edu.eci.prot.dsl2.generator

import com.google.inject.Inject
import edu.eci.prot.dsl2.dsl2.Entity
import edu.eci.prot.dsl2.dsl2.Feature
import edu.eci.prot.dsl2.generator.collections.JSModuleData
import java.util.ArrayList
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.naming.IQualifiedNameProvider

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class Dsl2Generator extends AbstractGenerator {
	@Inject extension IQualifiedNameProvider
	Entity classToServe;
	ArrayList<JSModuleData> appJSModules=new ArrayList<JSModuleData>();
	ArrayList<String> diagnosticNames=new ArrayList<String>();
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		//Create POJO entities
		for (e : resource.allContents.toIterable.filter(Entity)) {
			if(e.principal){
				classToServe=e;
			}
		}
		for (e : resource.allContents.toIterable.filter(Entity)) {
			
			fsa.generateFile(
                e.fullyQualifiedName.toString("/") + ".java",
                e.compile)
			//Create Register Investigators Views
	        for (Feature fea : e.features) {
	        	if(fea.diagnostic){
	        		diagnosticNames.add(fea.name.toFirstUpper);
	        		appJSModules.add(new JSModuleData("/static/app/RegistersInvestigatorView"+fea.name.toFirstUpper+"/RegistersInvestigatorView"+fea.name.toFirstUpper+".js",
	        			"myApp."+"RegistersInvestigatorView"+fea.name.toFirstUpper,
	        			"RegistersInvestigatorView"+fea.name.toFirstUpper+"/"+"RegistersInvestigatorView"+fea.name.toFirstUpper+".js"))
	        		fsa.generateFile("/static/app/RegistersInvestigatorView"+fea.name.toFirstUpper+"/"+"RegistersInvestigatorView"+fea.name.toFirstUpper+".html",
                	fea.compileRegistersInvestigatorViewHtml);
                	fsa.generateFile("/static/app/RegistersInvestigatorView"+fea.name.toFirstUpper+"/"+"RegistersInvestigatorView"+fea.name.toFirstUpper+".js",
                	fea.compileRegistersInvestigatorViewJS);
                	
                	//println(cr.fullyQualifiedName.lastSegment.toFirstUpper)
                	
                	//fsa.generateFile("/static/app/RegistersInvestigatorView"+fea.name.toFirstUpper+"/"+"RegistersInvestigatorView"+fea.name.toFirstUpper+".js",fea.compileRegistersInvestigatorViewJS);
	        	}
	        }
        }
        //Create services classes
        if(classToServe!==null){
        	fsa.generateFile(
	            ((classToServe.fullyQualifiedName.toString("/").replace("/model/"+classToServe.name, "")) + "/services/"+ classToServe.name + "Services.java"),
	            classToServe.compileServiceInterface);
	        fsa.generateFile(
	            ((classToServe.fullyQualifiedName.toString("/").replace("/model/"+classToServe.name, "")) + "/services/"+ classToServe.name + "ServicesImpl1.java"),
	            classToServe.compileServiceImplementation);
	        fsa.generateFile(
	            ((classToServe.fullyQualifiedName.toString("/").replace("/model/"+classToServe.name, "")) + "/controller/"+ classToServe.name + "Controller.java"),
	            classToServe.compileRESTControllers);
	        //Create JS Services
	        fsa.generateFile("/static/app/services/services.js", classToServe.compileJSServices);
        }
	   	//create app.js & index.html
	   	fsa.generateFile(
	            "/static/app/app.js",
	            appJSModules.compileAppJS);
        fsa.generateFile(
	            "/static/app/index.html",
	            appJSModules.compileIndexHtml);
        //Create Investigator Template
        fsa.generateFile("/static/app/Templates/templateInvestigator.js",
    	diagnosticNames.compileTemplateInvestigatorViewJS);
    	fsa.generateFile("/static/app/Templates/templateInvestigator.html",
    	diagnosticNames.compileTemplateInvestigatorViewHtml);
    	
    	//Clear actual collections
	   	appJSModules.clear;
	   	diagnosticNames.clear;
	}
	
	//Create TemplateInvestigatorView
	
	def compileTemplateInvestigatorViewJS(ArrayList<String> diagnostics)
	'''
	'use strict';
	
	angular.module('myApp.templateInvestigator', ['ngRoute'])
	
	.config(['$routeProvider', function($routeProvider) {
	  $routeProvider.when('/templateInvestigator', {
	    templateUrl: 'Templates/templateInvestigator.html',
	    controller: 'templateInvestigatorCtrl'
	  });
	}])
	
	.controller('templateInvestigatorCtrl', ['$rootScope', '$scope', '$location', function ($rootScope, $scope, $location) {
	
	      $scope.continueLogoutI=function(){
	            $location.path("view1");
	      };
	      $scope.continueHomeI=function(){
	            $location.path("HomeInvestigator");
	      };
		«FOR diag: diagnostics»
		$scope.continueRegistersI«diag»=function(){
		        $location.path("RegistersInvestigatorView«diag»");
		  };
		«ENDFOR»
	}]);
	'''
	
	
	def compileTemplateInvestigatorViewHtml(ArrayList<String> diagnostics)
	'''
	<div ng-controller="templateInvestigatorCtrl">
	    <!-- Navigation -->
	    <nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0">
	        <div class="navbar-header">
	            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
	                <span class="sr-only">Toggle navigation</span>
	                <span class="icon-bar"></span>
	                <span class="icon-bar"></span>
	                <span class="icon-bar"></span>
	            </button>
	            <a class="navbar-brand" href="index.html">SB Admin v2.0</a>
	        </div>
	        <!-- /.navbar-header -->
	
	        <ul class="nav navbar-top-links navbar-right">
	            <li><a ng-click="continueLogoutI()"><i class="fa fa-sign-out fa-fw"></i> Cerrar Sesión</a>
	            </li>
	        </ul>
	        <!-- /.navbar-top-links -->
	
	        <div class="navbar-default sidebar" role="navigation">
	            <div class="sidebar-nav navbar-collapse">
	                <ul class="nav" id="side-menu">
	                    <li>
	                        <a ng-click="continueHomeI()"><i class="fa fa-dashboard fa-fw"></i>Inicio</a>
	                    </li>
	                    «FOR diag: diagnostics»
	                    <li>
	                    <a  ng-click="continueRegistersI«diag»()"><i class="fa fa-bar-chart-o fa-fw"></i> Registros del Estudio «diag» </a>
	                    </li>                
	                    «ENDFOR»
	                </ul>
	            </div>
	            <!-- /.sidebar-collapse -->
	        </div>
	        <!-- /.navbar-static-side -->
	    </nav>
	</div>
	'''
	
	//Create index.html
	def compileIndexHtml(ArrayList<JSModuleData> modules)
		'''
		<!DOCTYPE html>
		<!--[if lt IE 7]>      <html lang="en" ng-app="myApp" class="no-chart lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
		<!--[if IE 7]>         <html lang="en" ng-app="myApp" class="no-chart lt-ie9 lt-ie8"> <![endif]-->
		<!--[if IE 8]>         <html lang="en" ng-app="myApp" class="no-chart lt-ie9"> <![endif]-->
		<!--[if gt IE 8]><!--> <html lang="en" ng-app="myApp" class="no-js"> <!--<![endif]-->
		<head>
		
		  <![endif]-->
		  <meta charset="utf-8">
		  <meta http-equiv="X-UA-Compatible" content="IE=edge">
		  <title>My AngularJS App</title>
		  <meta name="description" content="">
		  <meta name="viewport" content="width=device-width, initial-scale=1">
		  <link rel="stylesheet" href="bower_components/html5-boilerplate/dist/css/normalize.css">
		  <link rel="stylesheet" href="bower_components/html5-boilerplate/dist/css/main.css">
		  <link rel="stylesheet" href="app.css">
		  <!-- Bootstrap Core CSS -->
		  <link href="/app/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
		
		  <!-- MetisMenu CSS -->
		  <link href="/app/vendor/metisMenu/metisMenu.min.css" rel="stylesheet">
		
		  <!-- Custom CSS -->
		  <link href="/app/dist/css/sb-admin-2.css" rel="stylesheet">
		
		  <!-- Custom Fonts -->
		  <link href="/app/vendor/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
		  <script src="/app/bower_components/html5-boilerplate/dist/js/vendor/modernizr-2.8.3.min.js"></script>
		
		  <!-- HTML5 Shim and Respond.chart IE8 support of HTML5 elements and media queries -->
		  <!-- WARNING: Respond.chart doesn't work if you view the page via file:// -->
		  <!--[if lt IE 9]>
		  <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
		  <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
		</head>
		<body>
		  <!--[if lt IE 7]>
		      <p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
		  <![endif]-->
		
		  <div ng-view></div>
		
		  <div>Cliente Multiple app: v<span app-version></span></div>
		
		  <!-- In production use:
		  <script src="//ajax.googleapis.com/ajax/libs/angularjs/x.x.x/angular.min.chart"></script>
		  -->
		  <script src="bower_components/angular/angular.js"></script>
		  <script src="bower_components/angular-route/angular-route.js"></script>
		  <script src="bower_components/angular-resource/angular-resource.js"></script>
		  <script src="bower_components/chart.js/dist/Chart.min.js"></script>
		  <script src="bower_components/angular-chart.js/dist/angular-chart.min.js"></script>
		  <script src="app.js"></script>
		  <script src="view1/view1.js"></script>
		  <script src="PatientAutorization/PatientAutorization.js"></script>
		  <script src="Templates/templatePatient.js"></script>
		  <script src="Templates/templateDoctor.js"></script>
		  <script src="Templates/templateInvestigator.js"></script>
		  <script src="HomeInvestigator/HomeInvestigator.js"></script>
		  <script src="PatientChoiceView/PatientChoiceView.js"></script>
		  «FOR m: modules»
		  <script src="«m.htmlSRCString»"></script>
		  «ENDFOR»
		  <script src="/app/dist/js/sb-admin-2.js"></script>
		  <script src="services/services.js"></script>
		  <script src="components/version/version.js"></script>
		  <script src="components/version/version-directive.js"></script>
		  <script src="components/version/interpolate-filter.js"></script><!-- jQuery -->
		  <script src="/app/vendor/jquery/jquery.min.js"></script>
		
		  <!-- Bootstrap Core JavaScript -->
		  <script src="/app/vendor/bootstrap/js/bootstrap.min.js"></script>
		
		  <!-- Metis Menu Plugin JavaScript -->
		  <script src="/app/vendor/metisMenu/metisMenu.min.js"></script>
		
		
		</body>
		</html>
		
		'''
	
	//Create app.js
	def compileAppJS(ArrayList<JSModuleData> modules)
		'''
		'use strict';
		
		angular.module('myApp', [
		  'ngRoute',
		  «FOR m : modules»
		  '«m.JSAppModuleString»',
		  «ENDFOR»
		  'myApp.view1',
		  'myApp.HomeInvestigator',
		  'myApp.PatientAutorization',
		  'myApp.PatientChoiceView',
		  'myApp.version',
		  'services.factory',
		  'chart.js'
		]).
		config(['$locationProvider', '$routeProvider', function($locationProvider, $routeProvider) {
		  $locationProvider.hashPrefix('!');
		
		  $routeProvider.otherwise({redirectTo: '/view1'});
		}]);
		
		'''
	
	//Feature must be diagnostic
	def compileRegistersInvestigatorViewJS(Feature f)
		'''
		'use strict';
		
		angular.module('myApp.RegistersInvestigatorView«f.name.toFirstUpper»', ['ngRoute'])
		
		.config(['$routeProvider', function($routeProvider) {
		  $routeProvider.when('/RegistersInvestigatorView«f.name.toFirstUpper»', {
		    templateUrl: 'RegistersInvestigatorView«f.name.toFirstUpper»/RegistersInvestigatorView«f.name.toFirstUpper».html',
		    controller: 'RegistersInvestigatorView«f.name.toFirstUpper»Ctrl'
		  });
		}])
		
		.controller('RegistersInvestigatorView«f.name.toFirstUpper»Ctrl', ['«classToServe.name.toFirstLower»', '«classToServe.name.toFirstLower»s', '$rootScope', '$scope', function («classToServe.name.toFirstLower», «classToServe.name.toFirstLower»s, $rootScope, $scope) {
		     «classToServe.name.toFirstLower»s.get()
		        .$promise.then(
		                //success
		                function( value ){
		                    $scope.«classToServe.name.toFirstLower»sList=value;
		                    «var intPropCounter=0»
		                    «FOR dat: f.type.eAllContents.toIterable»
		                    «var feature =dat as Feature»
            				«IF(feature.type.name.equals("Integer"))»
            				$scope.«dat.fullyQualifiedName.lastSegment»=[];
            				//«intPropCounter=intPropCounter+1»
		                    «ENDIF»
		                    «ENDFOR»
		                    $scope.labels=[];
		                    $scope.diagnostics=[];
		                    $scope.series = ['Datos de Control del estudio'];
		                    for (var i = 0; i < $scope.«classToServe.name.toFirstLower»sList.length; i++) {
		                        if($scope.«classToServe.name.toFirstLower»sList[i].«f.name».length >= 1){
		                            $scope.«classToServe.name.toFirstLower»=$scope.«classToServe.name.toFirstLower»sList[i];
		                            $scope.labels.push($scope.«classToServe.name.toFirstLower»Act.id);
		                            «FOR dat: f.type.eAllContents.toIterable»
        		                    «var feature =dat as Feature»
                    				«IF(feature.type.name.equals("Integer"))»
                    				var «dat.fullyQualifiedName.lastSegment»Initial=0;
        		                    «ENDIF»
        		                    «ENDFOR»
		                            for(var n=0; n<$scope.«classToServe.name.toFirstLower»Act.«f.name».length; n++){
		                                var dd=$scope.«classToServe.name.toFirstLower»Act.«f.name»[n];
		                                «FOR dat: f.type.eAllContents.toIterable»
            		                    «var feature =dat as Feature»
                        				«IF(feature.type.name.equals("Integer"))»
                        				«dat.fullyQualifiedName.lastSegment»Initial=«dat.fullyQualifiedName.lastSegment»Initial+dd.«dat.fullyQualifiedName.lastSegment»;
            		                    «ENDIF»
            		                    «ENDFOR»
		                            }
		                            «FOR dat: f.type.eAllContents.toIterable»
        		                    «var feature =dat as Feature»
                    				«IF(feature.type.name.equals("Integer"))»
                    				$scope.«dat.fullyQualifiedName.lastSegment».push(«dat.fullyQualifiedName.lastSegment»Initial/$scope.«classToServe.name.toFirstLower»Act.«f.name».length);
        		                    «ENDIF»
        		                    «ENDFOR»
		                            $scope.diagnostics.push($scope.«classToServe.name.toFirstLower»sList[i].diagnostics[0]);
		                        }
		                    }
		                    «FOR dat: f.type.eAllContents.toIterable»
		                    «var feature =dat as Feature»
            				«IF(feature.type.name.equals("Integer"))»
            				«dat.fullyQualifiedName.lastSegment»Initial=0;
		                    «ENDIF»
		                    «ENDFOR»
		                    for(var j = 0; j < $scope.«(f.type.eAllContents.toIterable).get(0).fullyQualifiedName.lastSegment»; j++) {
		                    	«FOR dat: f.type.eAllContents.toIterable»
			                    «var feature =dat as Feature»
	            				«IF(feature.type.name.equals("Integer"))»
	            				«dat.fullyQualifiedName.lastSegment»Initial=«dat.fullyQualifiedName.lastSegment»Initial+$scope.«dat.fullyQualifiedName.lastSegment»[j];
			                    «ENDIF»
			                    «ENDFOR»
		                    }
		                    $scope.todoData=[];
		                    «FOR dat: f.type.eAllContents.toIterable»
		                    «var feature =dat as Feature»
            				«IF(feature.type.name.equals("Integer"))»
            				$scope.todoData.push(«dat.fullyQualifiedName.lastSegment»Initial/$scope.«dat.fullyQualifiedName.lastSegment».length);
		                    «ENDIF»
		                    «ENDFOR»
							$scope.todoLabels=[
		                    «FOR dat: f.type.eAllContents.toIterable»
		                    «var feature =dat as Feature»
            				«IF(feature.type.name.equals("Integer"))»
            				'«dat.fullyQualifiedName.lastSegment.toFirstUpper»'
            				«IF(intPropCounter>1)»
            				,
            				«ENDIF»
            				//«intPropCounter=intPropCounter-1»
		                    «ENDIF»
		                    «ENDFOR»
		                    ];
		                },
		                //error
		                function( error ){
		                    alert("El paciente no se encuentra registrado");
		                }
		        );
		}]);
		'''
	def compileRegistersInvestigatorViewHtml(Feature f)
		'''
		<div ng-include="'/app/Templates/templateInvestigator.html'"></div>
		<div id="page-wrapper">
		    <div class="row">
		        <div class="col-lg-12">
		            <h1 class="page-header">Datos de control del estudio</h1>
		        </div>
		        <!-- /.col-lg-12 -->
		    </div>
		    <div class="row">
		        <div class="col-lg-4">
		            <div class="panel panel-default">
		                <div class="panel-heading">
		                    Datos Promedio por cada Dato Capturado
		                </div>
		                <div class="panel-body">
		                    <canvas  id="todoData" class="chart chart-bar"
		                             chart-data="todoData" chart-labels="todoLabels" chart-series="series">
		                    </canvas>
		                </div>
		                <!-- /.panel-body -->
		            </div>
		            <!-- /.panel -->
		        </div>
		        <!-- /.col-lg-4 -->
		    </div>
		    <div class="row">
				«FOR dat: f.type.eAllContents.toIterable»
				«var feature =dat as Feature»
				«IF(feature.type.name.equals("Integer"))»
				<div class="col-lg-4">
				<div class="panel panel-default">
				<div class="panel-heading">
		                    «dat.fullyQualifiedName.lastSegment.toFirstUpper» (Promedio de cada participante)
				</div>
				<div class="panel-body">
				<canvas  id="«dat.fullyQualifiedName.lastSegment»" class="chart chart-bar"
				chart-data="«dat.fullyQualifiedName.lastSegment»" chart-labels="labels" chart-series="series">
				</canvas>
				</div>
				<!-- /.panel-body -->
				</div>
				<!-- /.panel -->
				</div>
				<!-- /.col-lg-4 -->
		        «ENDIF»
		        «ENDFOR»
		    </div>
		</div>
		<!-- /#page-wrapper -->
		'''
	
	def compileJSServices(Entity e)
		'''
		'use strict';
		
		angular.module('services.factory', ['ngRoute', 'ngResource'])
		.factory('«e.name.toFirstLower»', function($resource){
			return $resource('/«e.name.toFirstLower»/:«e.name.toFirstLower»Id',{id:"@_«e.name.toFirstLower»Id"},{get: { method: 'GET'}});
		})
		.factory('«e.name.toFirstLower»s', function($resource) {
			return $resource('/«e.name.toFirstLower»',{},{ 'get': { method: 'GET', isArray: true}, 'update': { method: 'PUT', isArray: false}});
		})
		;
		'''
	
	def compileRESTControllers(Entity e)
		'''
		package «((e.fullyQualifiedName.toString(".").replace(".model."+e.name, "")) + ".controller;")»
		
		import «e.fullyQualifiedName.toString(".")»;
		import «((e.fullyQualifiedName.toString(".").replace(".model."+e.name, "")) + ".services")».«e.name»Services;
		import org.springframework.beans.factory.annotation.Autowired;
		import org.springframework.http.HttpStatus;
		import org.springframework.http.ResponseEntity;
		import org.springframework.web.bind.annotation.*;
		
		@RestController
		@RequestMapping(value = "/«e.name.toFirstLower»")
		public class «e.name»Controller {
		
		    @Autowired
		    private «e.name»Services ps;
		
		    @RequestMapping(method = RequestMethod.GET)
		    public ResponseEntity<?> get«e.name»s(){
		        return new ResponseEntity<>(ps.get«e.name»s(), HttpStatus.ACCEPTED);
		    }
		
		    @RequestMapping(method = RequestMethod.GET, path = "/{«e.name.toFirstLower»Id}")
		    public ResponseEntity<?> get«e.name»(@PathVariable Integer «e.name.toFirstLower»Id) {
		        return new ResponseEntity<>(ps.get«e.name»(«e.name.toFirstLower»Id), HttpStatus.ACCEPTED);
		    }
		
		    @RequestMapping(method = RequestMethod.POST)
		    public ResponseEntity<?> post«e.name»(@RequestBody «e.name» p) {
		        ps.save«e.name»(p);
		        return new ResponseEntity<>(HttpStatus.ACCEPTED);
		    }
		
		    @RequestMapping(method = RequestMethod.PUT)
		    public ResponseEntity<?> update«e.name»(@RequestBody «e.name» p) {
		        ps.update«e.name»(p);
		        return new ResponseEntity<>(HttpStatus.ACCEPTED);
		    }
		}
		'''
	
	def compileServiceImplementation(Entity e)
		'''
		package  «((e.fullyQualifiedName.toString(".").replace(".model."+e.name, "")) + ".services;")»
		import «e.fullyQualifiedName.toString(".")»;
		import org.springframework.stereotype.Service;
		
		import java.util.ArrayList;
		import java.util.List;

		@Service
		public class «e.name»ServicesImpl1 implements «e.name»Services{
		
		    List<«e.name»> «e.name.toFirstLower»List=new ArrayList<>();
		
		    @Override
		    public void save«e.name»(«e.name» p) {
		        «e.name.toFirstLower»List.add(p);
		    }
		
		    @Override
		    public List<«e.name»> get«e.name»s() {
		        return «e.name.toFirstLower»List;
		    }
		
		    @Override
		    public void update«e.name»(«e.name» p) {
		        for («e.name» pe :
		                «e.name.toFirstLower»List) {
		            if (p.getId()==pe.getId()) {
		                «e.name.toFirstLower»List.add(«e.name.toFirstLower»List.indexOf(pe), p);
		            }
		        }
		    }
		
		
		    @Override
		    public «e.name» get«e.name»(Integer pId) {
		        «e.name» ans=null;
		        for («e.name» pe :
		                «e.name.toFirstLower»List) {
		            if(pe.getId()==pId){
		                ans=pe;
		                break;
		            }
		        }
		        return ans;
		    }
		}
		'''
	
	def compileServiceInterface(Entity e)
		'''
		package  «((e.fullyQualifiedName.toString(".").replace(".model."+e.name, "")) + ".services;")»
		import «e.fullyQualifiedName.toString(".")»;
		import java.util.List;
		
		public interface «e.name»Services {
		    public void save«e.name»(«e.name» p);
		    public List<«e.name»> get«e.name»s();
		    public void update«e.name»(«e.name» p);
		    public «e.name» get«e.name»(Integer pId);
		}
		'''
	
	def compile(Entity e) 
	''' 
        «IF e.eContainer.fullyQualifiedName !== null»
package 
		«e.eContainer.fullyQualifiedName»;
        «ENDIF»
	    
        «FOR i : e.imports»
import «i.importedNamespace»;
	    «ENDFOR»
	    import java.util.Date;
	    
public class «e.name» «IF e.superType !== null»extends «e.superType.fullyQualifiedName» «ENDIF»{
	public «e.name»(){}
	private Integer id;
	
	public Integer getId() {
	return id;
	}
	
	public void setId(Integer id) {
	this.id = id;
	}
            «FOR f : e.features»
            	«IF !f.name.equals("id")»
                	«f.compile»
            	«ENDIF»
            «ENDFOR»
        }
    '''
 
    def compile(Feature f) '''
    	«IF f.many»
    		private java.util.ArrayList<«f.type.fullyQualifiedName»> «f.name» =new java.util.ArrayList<«f.type.fullyQualifiedName»>();
    		
    		public java.util.ArrayList<«f.type.fullyQualifiedName»> get«f.name.toFirstUpper»() {
    		return «f.name»;
    		}
    		
    		
    		public void set«f.name.toFirstUpper»(java.util.ArrayList<«f.type.fullyQualifiedName»> «f.name») {
    		this.«f.name» = «f.name»;
    		}
    	«ELSE»
    		private «f.type.fullyQualifiedName» «f.name»;
    		
    		public «f.type.fullyQualifiedName» get«f.name.toFirstUpper»() {
    		return «f.name»;
    		}
    		
    		public void set«f.name.toFirstUpper»(«f.type.fullyQualifiedName» «f.name») {
    		this.«f.name» = «f.name»;
    		}
    	«ENDIF»
    '''
}
